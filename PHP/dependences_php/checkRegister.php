<?php
require '../vendor/autoload.php';
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require 'generatePassword.php';


require 'database.php'; // Make sure to have the database connection
$file_target = '../SQL/users.sql';


if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    if (isset($_POST['email'])) {
        $email = trim($_POST['email']);

        // Sanitize the email to avoid SQL injection (prepare the query properly)
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM users WHERE username = :email");
        $stmt->execute(['email' => $email]);

        // If the count is greater than 0, it means the email exists in the database
        if ($stmt->fetchColumn() > 0) {
            $_SESSION['email_error'] = 'Email already exists. Please use a different email.';
        } else {
            // Collect form inputs and sanitize them
            $firstName = trim($_POST['first_name']);
            $lastName = trim($_POST['last_name']);
            // Assuming the password is generated by some custom function
            $password = generatePassword();  // Make sure this function is defined somewhere

            // Hash the password using SHA-512
            $hashedPassword = hash('sha512', $password);

            // Insert the user into the database
            $stmt = $pdo->prepare('
            INSERT INTO users (username, firstName, lastName, password, active) 
            VALUES (:username, :firstName, :lastName, :password, 0)
            ');

            // Execute the query with the appropriate values
            $stmt->execute(params: [
                'username' => $email,  // Use email as the username
                'firstName' => $firstName,
                'lastName' => $lastName,
                'password' => $hashedPassword,
            ]);

            // If insertion was successful
            if ($stmt->rowCount() > 0) {

                $query = 'INSERT INTO users (username, firstName, lastName, password, active) 
            VALUES (\':username\', \':firstName\', \':lastName\', \':password\', 0)';

                // Replace values manually in the SQL string
                $insertSQL = str_replace(
                    [':username', ':firstName', ':lastName', ':password'],
                    [$email, $firstName, $lastName, $hashedPassword],
                    $query
                );
                if (file_put_contents($file_target, $insertSQL . PHP_EOL, FILE_APPEND)) {
                } else {
                    echo "Error saving the INSERT statement.";
                }

                // Set cookies for the user (e.g., session persistence)
                setcookie('email', $email, [
                    'expires' => time() + 3600,
                    'path' => '/',  
                    'secure' => false, 
                    'httponly' => true,  
                    'samesite' => 'Lax' 
                ]);
                // Example usage of the function
                $recipientEmail = $email;  // Recipient's email address
                $recipientName = 'Recipient Name';  // Recipient's name
                $subject = 'This is your password';  // Subject of the email
                $bodyContent = '
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
        }
        .email-container {
            max-width: 600px;
            margin: 20px auto;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .header {
            background-color: #4CAF50;
            color: white;
            padding: 20px;
            text-align: center;
        }
        .content {
            padding: 20px;
        }
        .content h1 {
            color: #333333;
            font-size: 24px;
        }
        .content p {
            color: #666666;
            font-size: 16px;
            line-height: 1.5;
        }
        .button-container {
            text-align: center;
            margin: 20px 0;
        }
        .button {
            background-color: #4CAF50;
            color: white;
            text-decoration: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;
            display: inline-block;
        }
        .footer {
            background-color: #f4f4f9;
            text-align: center;
            padding: 10px;
            font-size: 12px;
            color: #aaaaaa;
        }
    </style>
</head>
<body>
    <div class="email-container">
        <div class="header">
            <h1>Password Notification</h1>
        </div>
        <div class="content">
            <h1>Hello,' . htmlspecialchars($firstName) . ' </h1>
            <p>Your password is: <strong>' . htmlspecialchars($password) . '</strong></p>
            <p>For security reasons, we highly recommend that you change your password immediately.</p>
            
            <p>If you didn\'t request this, please contact support immediately.</p>
        </div>
        <div class="footer">
            <p>&copy; 2025 Urbankicks. All rights reserved.</p>
        </div>
    </div>
</body>
</html>';
                $passwordEmail = 'jaes owwy dtpr ajlv';  // SMTP password (app-specific password for Gmail with 2-step verification)

             sendEmail($recipientEmail, $recipientName, $subject, $bodyContent, $passwordEmail);  // Call the function and send the email



                // Redirect to a thank you page after successful registration
                header('Location: thankYouRegister.php');
                exit();
            } else {
                $_SESSION['email_error'] = 'There was an error during registration. Please try again later.';
            }
        }

    } else {
        $_SESSION['email_error'] = 'Email is required!';
    }
}

function sendEmail($recipientEmail, $recipientName, $subject, $bodyContent, $password)
{
    $mail = new PHPMailer(true);  // Create a new PHPMailer instance

    try {
        // SMTP server configuration
        $mail->isSMTP();  // Set mailer to use SMTP
        $mail->Host = 'smtp.gmail.com';  // Set the SMTP server (Gmail in this case)
        $mail->SMTPAuth = true;  // Enable SMTP authentication
        $mail->Username = 'webprogammingreut@gmail.com';  // SMTP username (your Gmail email address)
        $mail->Password = $password;  // SMTP password (use app-specific password if 2-step verification is enabled)
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;  // Enable TLS encryption
        $mail->Port = 587;  // Set the TCP port to connect to

        // Sender and recipient
        $mail->setFrom('webprogammingreut@gmail.com', 'Urbankicks');  // Set the sender email and name
        $mail->addAddress($recipientEmail, $recipientName);  // Set the recipient email and name

        // Set email format to HTML
        $mail->isHTML(true);  // Set email format to HTML
        $mail->Subject = $subject;  // Set the subject of the email
        $mail->Body = $bodyContent;  // Set the body content of the email (HTML)
        $mail->AltBody = strip_tags($bodyContent);  // Set the alternative text body for non-HTML email clients

        // Send the email
        $mail->send();
        return 'Message has been sent successfully!';
    } catch (Exception $e) {
        return "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }
}







?>